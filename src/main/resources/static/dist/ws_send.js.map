{
  "version": 3,
  "sources": ["../js/util/nifi/parse.js", "../js/business/ws_send.js"],
  "sourcesContent": ["'use strict';\r\n/**\r\n * binary \uB370\uC774\uD130\uB97C JSON \uB370\uC774\uD130\uB85C \uBCC0\uD658 - NINI \uC6A9\r\n * @param {Uint8Array} binary\r\n * @return {Object}\r\n * @example\r\n * const data = { token: '\uD55C\uAE00\uC785\uB2C8\uB2E4', type: 'subscribe', topic: 'nifi' };\r\n * const buffer = JsonToBinary(data);\r\n * DecodeBinary(buffer);\r\n * {token: \"\uD55C\uAE00\uC785\uB2C8\uB2E4\", type: \"subscribe\", topic: \"nifi\"}\r\n **/\r\nfunction DecodeBinary(binary) {\r\n\treturn JSON.parse(decodeURIComponent(escape(window.atob(String.fromCharCode.apply(null, binary)))));\r\n}\r\n\r\n//\uC8FC\uC11D\r\n/**\r\n * JSON \uB370\uC774\uD130\uB97C binary \uB370\uC774\uD130\uB85C \uBCC0\uD658\r\n * @param {Object} json\r\n * @return {Uint8Array}\r\n * @example\r\n * const data = { token: '\uD55C\uAE00\uC785\uB2C8\uB2E4', type: 'subscribe', topic: 'nifi' };\r\n * const buffer = JsonToBinary(data);\r\n * Uint8Array(48) [123, 34, 116, 111, 107, 101, 110, 34, 58, 34, 237, 149, 156, 234, 184, 128, 237, 149, 156, 34, 44, 34, 116, 121, 112, 101, 34, 58, 34, 115, 117, 98, 115, 99, 114, 105, 98, 101, 34, 44, 34, 116, 111, 112, 105, 99, 34, 58, 34, 110, 105, 102, 105, 34, 125]\r\n **/\r\nfunction JsonToBinary(json) {\r\n\treturn new TextEncoder().encode(JSON.stringify(json));\r\n}\r\n\r\nexport { DecodeBinary, JsonToBinary };\r\n", "'use strict';\r\n\r\nimport { JsonToBinary, DecodeBinary } from '../util/nifi/parse.js';\r\n\r\nconst data = { token: '\uD55C\uAE00\uC785\uB2C8\uB2E4', type: 'subscribe', topic: 'nifi' };\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n\tconst buffer = JsonToBinary(data); // JSON \uB370\uC774\uD130\uB97C binary \uB370\uC774\uD130\uB85C \uBCC0\uD658\r\n\tconst nifiSocket = new WebSocket(`wss://${window.location.hostname}/nws/webPoint`);\r\n\tnifiSocket.binaryType = 'arraybuffer';\r\n\tnifiSocket.onopen = () => {\r\n\t\tconsole.log('nifi \uC5F0\uACB0 \uC131\uACF5');\r\n\t\tsetInterval(() => {\r\n\t\t\t//nifiSocket.send(buffer);\r\n\t\t}, 1000);\r\n\t};\r\n\tnifiSocket.onmessage = event => {\r\n\t\tconsole.log(JSON.parse(DecodeBinary(event.data)));\r\n\t\tconsole.log(event.data);\r\n\t};\r\n\tnifiSocket.onerror = error => {\r\n\t\tconsole.log(error);\r\n\t};\r\n\tnifiSocket.onclose = () => {\r\n\t\tconsole.log('nifi \uC5F0\uACB0 \uC885\uB8CC');\r\n\t};\r\n});\r\n"],
  "mappings": ";;;AAWA,WAAS,aAAa,QAAQ;AAC7B,WAAO,KAAK,MAAM,mBAAmB,OAAO,OAAO,KAAK,OAAO,aAAa,MAAM,MAAM,MAAM,CAAC,CAAC,CAAC,CAAC;AAAA,EACnG;AAYA,WAAS,aAAa,MAAM;AAC3B,WAAO,IAAI,YAAY,EAAE,OAAO,KAAK,UAAU,IAAI,CAAC;AAAA,EACrD;;;ACvBA,MAAM,OAAO,EAAE,OAAO,kCAAS,MAAM,aAAa,OAAO,OAAO;AAEhE,WAAS,iBAAiB,oBAAoB,YAAY;AACzD,UAAM,SAAS,aAAa,IAAI;AAChC,UAAM,aAAa,IAAI,UAAU,SAAS,OAAO,SAAS,uBAAuB;AACjF,eAAW,aAAa;AACxB,eAAW,SAAS,MAAM;AACzB,cAAQ,IAAI,gCAAY;AACxB,kBAAY,MAAM;AAAA,MAElB,GAAG,GAAI;AAAA,IACR;AACA,eAAW,YAAY,WAAS;AAC/B,cAAQ,IAAI,KAAK,MAAM,aAAa,MAAM,IAAI,CAAC,CAAC;AAChD,cAAQ,IAAI,MAAM,IAAI;AAAA,IACvB;AACA,eAAW,UAAU,WAAS;AAC7B,cAAQ,IAAI,KAAK;AAAA,IAClB;AACA,eAAW,UAAU,MAAM;AAC1B,cAAQ,IAAI,gCAAY;AAAA,IACzB;AAAA,EACD,CAAC;",
  "names": []
}
